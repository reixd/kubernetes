# Default values for proxysql.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  # https://hub.docker.com/r/proxysql/proxysql
  repository: proxysql/proxysql
  pullPolicy: IfNotPresent
  tag: "2.2.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 6032

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

terminationGracePeriodSeconds: 300

###############################################################################
# ProxySQL Config #############################################################
###############################################################################

# Enable SSL communication with the backend MySQL servers
ssl:
  ## When a cert and a key or fromSecret are provided use_ssl is be enabled automaticaly (in mysql_servers items)
  #  if use_ssl is not specified.
  auto: true
  ca: ""
  cert: ""
  key: ""
  ## Loads ca.pem, cert.pem, and key.pem from an existingSecret
  fromSecret: ""

admin_variables:
  ## ref: https://proxysql.com/Documentation/global-variables/admin-variables/
  #
  debug: false

  mysql_ifaces: "0.0.0.0:6032"
  admin_credentials: "admin:admin;radmin:radmin"

  cluster_username: "radmin"
  cluster_password: "radmin"
  cluster_check_interval_ms: 200
  cluster_check_status_frequency: 100
  cluster_mysql_query_rules_save_to_disk: true
  cluster_mysql_servers_save_to_disk: true
  cluster_mysql_users_save_to_disk: true
  cluster_proxysql_servers_save_to_disk: true
  cluster_mysql_query_rules_diffs_before_sync: 3
  cluster_mysql_servers_diffs_before_sync: 3
  cluster_mysql_users_diffs_before_sync: 3
  cluster_proxysql_servers_diffs_before_sync: 3

mysql_variables:
  ## ref: https://github.com/sysown/proxysql/wiki/Global-variables
  #
  interfaces: "0.0.0.0:6033"
  ## The number of background threads that ProxySQL uses in order to process MySQL traffic
  threads: 2
  ## The maximum number of client connections that the proxy can handle.
  max_connections: 2048
  default_query_delay: 0
  ## Mechanism for specifying the maximal duration of queries to the backend MySQL (in ms)
  default_query_timeout: 3600000

  have_compress: true
  poll_timeout: 2000
  default_schema: "information_schema"
  stacksize: 1048576
  server_version: "8.0.20"
  connect_timeout_server: 3000

  ## Enables or disables MySQL Monitor.
  #  ref: https://github.com/sysown/proxysql/wiki/Monitor-Module
  monitor_username: "monitor"
  monitor_password: "monitor"
  monitor_history: 600000
  monitor_connect_interval: 5000
  monitor_ping_interval: 2000
  monitor_read_only_interval: 1500
  monitor_read_only_timeout: 500

  ping_interval_server_msec: 15000
  ping_timeout_server: 500
  commands_stats: true
  sessions_sort: true
  connect_retries_on_failure: 10

## Define MySQL backend servers
#
mysql_servers:
   - address: "mysql-8"
     port: 3306
     hostgroup: 1
     max_connections: 5000
   - address: "mysql-8-slave"
     port: 3306
     hostgroup: 1
     max_connections: 5000


## Configures ProxySQL mysql users.
#  For MySQL 8.0 paswords must be mysql_native_password.
#  ref: https://github.com/sysown/proxysql/wiki/MySQL-8.0
#
mysql_users:
   - username: "root"
     password: "XHCO2ydDXj"
     default_hostgroup: 0
     active: 1
   - username: "monitor"
     password: "monitor"
     default_hostgroup: 0
     active: 1
  # - username: "user"
  #   password: "password"
  #   default_hostgroup: 0
  #   max_connections: 200
  #   default_schema: "information_schema"
  #   active: 1


## Defines MySQL Query Rules (routing)
#
mysql_query_rules:
  ##  Note that rule_id is not required! Since it's automagically set
  #   based on the array index.
  #
  - active: 1
    match_pattern: "^SELECT .* FOR UPDATE$"
    destination_hostgroup: 0
    apply: 1
  - active: 1
    match_pattern: "^SELECT"
    destination_hostgroup: 1
    apply: 1


## Defines an additional list of ProxySQL peers (clustering).
#   The default list `proxysql_servers` iterates over the number statefullset replicas (default 1).
#   ref: https://proxysql.com/documentation/proxysql-cluster/
additional_proxysql_servers:
  # - hostname : peer’s hostname/IP
  #   port : peer’s port
  #   weight : currently unused, but in the roadmap for future enhancements
  #   comment : free form comment field

proxysql_cluster:
  enabled: false

  core:
    ## DNS Example:
    #   headless-svc:                 proxysql-core.<namespace>.svc.cluster.local
    #   sts-pod:      proxysql-core-0.proxysql-core.<namespace>.svc.cluster.local

    # Number of core/main ProxySQL nodes to listen for changes on AdminPort
    #   It is recommended to use one of the following number of replicas: 3, 5, 7, or 9.
    replicas: 3

  satellite:
    # Select the Kubernetes Resource type for the Satellite nodes,
    #   either "DaemonSet" or "Deployment"
    kind:  "DaemonSet"

    # Only applies if kind: Deployment
    replicas: 3

## Defines the Scheduler
#
# ref: https://proxysql.com/documentation/scheduler/
schedulers:
  ##  Note that `id`` is not required! Since it's automagically set
  #   based on the array index.
  #
  - active: 1
    interval_ms: 5000
    filename: "/bin/bash"
    arg1: "/tmp/hg-scheduler.bash"
    arg2: ""
    arg3: ""
    arg4: ""
    arg5: ""


## Define MySQL Replication Hostgroups
#
mysql_replication_hostgroups:
  - writer_hostgroup: 0
    reader_hostgroup: 1
    comment: "RHG1"
